{"ast":null,"code":"import axios from 'axios';\nimport Notification from './components/Notification.vue';\nexport default {\n  name: 'App',\n  components: {\n    Notification\n  },\n  data() {\n    return {\n      question: {},\n      selectedAnswer: '',\n      notificationMessage: '',\n      notificationType: ''\n    };\n  },\n  created() {\n    this.fetchQuestion();\n  },\n  methods: {\n    async fetchQuestion() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/game/start');\n        this.question = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitAnswer() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/game/answer', {\n          id: this.question._id,\n          answer: this.selectedAnswer\n        });\n        const isCorrect = response.data.correct;\n        if (isCorrect) {\n          this.notificationMessage = 'Correct!';\n          this.notificationType = 'success';\n        } else {\n          this.notificationMessage = `Wrong! The correct answer is: ${response.data.correctAnswer}`;\n          this.notificationType = 'error';\n        }\n        this.fetchQuestion(); // Fetch new question\n        this.selectedAnswer = ''; // Clear selected answer\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    clearNotification() {\n      this.notificationMessage = '';\n      this.notificationType = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","Notification","name","components","data","question","selectedAnswer","notificationMessage","notificationType","created","fetchQuestion","methods","response","get","error","console","submitAnswer","post","id","_id","answer","isCorrect","correct","correctAnswer","clearNotification"],"sources":["/home/parth/Desktop/game_app/gourmet-game-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"game-container\">\n      <h2>{{ question.question }}</h2>\n      <img :src=\"question.image\" alt=\"Dish Image\" class=\"dish-image\">\n      <p>{{ question.description }}</p>\n      <div v-for=\"(answer, index) in question.answers\" :key=\"index\" class=\"answer-option\">\n        <input type=\"radio\" :id=\"answer\" v-model=\"selectedAnswer\" :value=\"answer\">\n        <label :for=\"answer\">{{ answer }}</label>\n      </div>\n      <button @click=\"submitAnswer\">Submit</button>\n    </div>\n    <Notification :message=\"notificationMessage\" :type=\"notificationType\" @clear=\"clearNotification\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Notification from './components/Notification.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Notification\n  },\n  data() {\n    return {\n      question: {},\n      selectedAnswer: '',\n      notificationMessage: '',\n      notificationType: ''\n    };\n  },\n  created() {\n    this.fetchQuestion();\n  },\n  methods: {\n    async fetchQuestion() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/game/start');\n        this.question = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitAnswer() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/game/answer', {\n          id: this.question._id,\n          answer: this.selectedAnswer\n        });\n        const isCorrect = response.data.correct;\n        if (isCorrect) {\n          this.notificationMessage = 'Correct!';\n          this.notificationType = 'success';\n        } else {\n          this.notificationMessage = `Wrong! The correct answer is: ${response.data.correctAnswer}`;\n          this.notificationType = 'error';\n        }\n        this.fetchQuestion(); // Fetch new question\n        this.selectedAnswer = ''; // Clear selected answer\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    clearNotification() {\n      this.notificationMessage = '';\n      this.notificationType = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.game-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.dish-image {\n  height: 150px;\n  width: 150px;\n  margin-bottom: 10px;\n}\n\n.answer-option {\n  margin-bottom: 10px;\n}\n\nbutton {\n  display: block;\n  margin: 20px auto;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n@media (max-width: 600px) {\n  .game-container {\n    padding: 10px;\n  }\n\n  button {\n    font-size: 14px;\n  }\n}\n</style>\n"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,+BAA+B;AAExD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC,CAAC;MACZC,cAAc,EAAE,EAAE;MAClBC,mBAAmB,EAAE,EAAE;MACvBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsC,CAAC;QACxE,IAAI,CAACR,QAAO,GAAIO,QAAQ,CAACR,IAAI;MAC/B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMZ,KAAK,CAACiB,IAAI,CAAC,uCAAuC,EAAE;UACzEC,EAAE,EAAE,IAAI,CAACb,QAAQ,CAACc,GAAG;UACrBC,MAAM,EAAE,IAAI,CAACd;QACf,CAAC,CAAC;QACF,MAAMe,SAAQ,GAAIT,QAAQ,CAACR,IAAI,CAACkB,OAAO;QACvC,IAAID,SAAS,EAAE;UACb,IAAI,CAACd,mBAAkB,GAAI,UAAU;UACrC,IAAI,CAACC,gBAAe,GAAI,SAAS;QACnC,OAAO;UACL,IAAI,CAACD,mBAAkB,GAAK,iCAAgCK,QAAQ,CAACR,IAAI,CAACmB,aAAc,EAAC;UACzF,IAAI,CAACf,gBAAe,GAAI,OAAO;QACjC;QACA,IAAI,CAACE,aAAa,CAAC,CAAC,EAAE;QACtB,IAAI,CAACJ,cAAa,GAAI,EAAE,EAAE;MAC5B,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDU,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACjB,mBAAkB,GAAI,EAAE;MAC7B,IAAI,CAACC,gBAAe,GAAI,EAAE;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}