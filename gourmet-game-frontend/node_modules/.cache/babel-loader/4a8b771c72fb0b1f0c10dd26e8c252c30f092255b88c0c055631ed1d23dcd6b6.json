{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"game-container\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"id\", \"value\"];\nconst _hoisted_5 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.question.question), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $data.question.image,\n    alt: \"Dish Image\",\n    class: \"dish-image\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"p\", null, _toDisplayString($data.question.description), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.question.answers, (answer, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"answer-option\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: answer,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedAnswer = $event),\n      value: answer\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelRadio, $data.selectedAnswer]]), _createElementVNode(\"label\", {\n      for: answer\n    }, _toDisplayString(answer), 9 /* TEXT, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitAnswer && $options.submitAnswer(...args))\n  }, \"Submit\")])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","question","src","image","alt","_hoisted_3","description","_Fragment","_renderList","answers","answer","index","key","type","_cache","$event","selectedAnswer","value","_hoisted_4","for","_hoisted_5","onClick","args","$options","submitAnswer"],"sources":["/home/parth/Desktop/game_app/gourmet-game-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"game-container\">\n      <h2>{{ question.question }}</h2>\n      <img :src=\"question.image\" alt=\"Dish Image\" class=\"dish-image\">\n      <p>{{ question.description }}</p>\n      <div v-for=\"(answer, index) in question.answers\" :key=\"index\" class=\"answer-option\">\n        <input type=\"radio\" :id=\"answer\" v-model=\"selectedAnswer\" :value=\"answer\">\n        <label :for=\"answer\">{{ answer }}</label>\n      </div>\n      <button @click=\"submitAnswer\">Submit</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      question: {},\n      selectedAnswer: ''\n    };\n  },\n  created() {\n    this.fetchQuestion();\n  },\n  methods: {\n    async fetchQuestion() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/game/start');\n        this.question = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitAnswer() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/game/answer', {\n          id: this.question._id,\n          answer: this.selectedAnswer\n        });\n        alert(response.data.correct ? \"Correct!\" : \"Wrong!\");\n        this.fetchQuestion(); // Fetch new question after submitting answer\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.game-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.dish-image {\n  /* max-width: 100%; */\n  height: 150px;\n  margin-bottom: 10px;\n}\n\n.answer-option {\n  margin-bottom: 10px;\n}\n\nbutton {\n  display: block;\n  margin: 20px auto;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n@media (max-width: 600px) {\n  .game-container {\n    padding: 10px;\n  }\n\n  button {\n    font-size: 14px;\n  }\n}\n</style>\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAgB;mBAF/B;mBAAA;mBAAA;;uBACEC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,mBAAA,CASM,OATNC,UASM,GARJD,mBAAA,CAAgC,YAAAE,gBAAA,CAAzBC,KAAA,CAAAC,QAAQ,CAACA,QAAQ,kBACxBJ,mBAAA,CAA+D;IAAzDK,GAAG,EAAEF,KAAA,CAAAC,QAAQ,CAACE,KAAK;IAAEC,GAAG,EAAC,YAAY;IAACV,KAAK,EAAC;0BAJxDW,UAAA,GAKMR,mBAAA,CAAiC,WAAAE,gBAAA,CAA3BC,KAAA,CAAAC,QAAQ,CAACK,WAAW,mB,kBAC1BX,mBAAA,CAGMY,SAAA,QATZC,WAAA,CAMqCR,KAAA,CAAAC,QAAQ,CAACQ,OAAO,EANrD,CAMmBC,MAAM,EAAEC,KAAK;yBAA1BhB,mBAAA,CAGM;MAH4CiB,GAAG,EAAED,KAAK;MAAEjB,KAAK,EAAC;wBAClEG,mBAAA,CAA0E;MAAnEgB,IAAI,EAAC,OAAO;MAAEpB,EAAE,EAAEiB,MAAM;MAPvC,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOkDf,KAAA,CAAAgB,cAAc,GAAAD,MAAA;MAAGE,KAAK,EAAEP;4BAP1EQ,UAAA,I,eAOkDlB,KAAA,CAAAgB,cAAc,E,GACxDnB,mBAAA,CAAyC;MAAjCsB,GAAG,EAAET;IAAM,GAAAX,gBAAA,CAAKW,MAAM,wBARtCU,UAAA,E;kCAUMvB,mBAAA,CAA6C;IAApCwB,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}